// 📁 client/src/pages/Clients.jsx
import { useEffect, useState } from "react";
import axios from "axios";

export default function Clients() {
  const [clients, setClients] = useState([]);
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [phone, setPhone] = useState("");
  const [address, setAddress] = useState("");
  const [error, setError] = useState("");

  const token = localStorage.getItem("token");

  const fetchClients = async () => {
    try {
      const res = await axios.get("/api/clients", {
        headers: { Authorization: `Bearer ${token}` },
      });
      setClients(res.data);
    } catch (err) {
      setError("Error al cargar clientes");
    }
  };

  const createClient = async (e) => {
    e.preventDefault();
    try {
      await axios.post(
        "/api/clients",
        { name, email, phone, address },
        { headers: { Authorization: `Bearer ${token}` } }
      );
      setName(""); setEmail(""); setPhone(""); setAddress("");
      fetchClients();
    } catch (err) {
      setError("Error al crear cliente");
    }
  };

  const deleteClient = async (id) => {
    if (!window.confirm("¿Eliminar este cliente?")) return;
    try {
      await axios.delete(`/api/clients/${id}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      fetchClients();
    } catch (err) {
      setError("Error al eliminar cliente");
    }
  };

  useEffect(() => { fetchClients(); }, []);

  return (
    <div className="p-6 bg-gray-100 min-h-screen">
      <h1 className="text-2xl font-bold mb-4">Mis Clientes</h1>

      {error && <p className="text-red-600 mb-4">{error}</p>}

      <form onSubmit={createClient} className="bg-white p-4 rounded shadow mb-6">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <input type="text" placeholder="Nombre" value={name} onChange={(e) => setName(e.target.value)} required className="border p-2 rounded" />
          <input type="email" placeholder="Correo" value={email} onChange={(e) => setEmail(e.target.value)} className="border p-2 rounded" />
          <input type="text" placeholder="Teléfono" value={phone} onChange={(e) => setPhone(e.target.value)} className="border p-2 rounded" />
          <input type="text" placeholder="Dirección" value={address} onChange={(e) => setAddress(e.target.value)} className="border p-2 rounded" />
        </div>
        <button type="submit" className="mt-4 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
          Agregar Cliente
        </button>
      </form>

      <ul className="space-y-3">
        {clients.map((client) => (
          <li key={client.id} className="bg-white p-4 rounded shadow flex justify-between items-center">
            <div>
              <p className="font-bold">{client.name}</p>
              <p className="text-sm text-gray-600">{client.email} — {client.phone}</p>
              <p className="text-sm">{client.address}</p>
            </div>
            <button onClick={() => deleteClient(client.id)} className="text-red-600 hover:underline">
              Eliminar
            </button>
          </li>
        ))}
      </ul>
    </div>
  );
}
