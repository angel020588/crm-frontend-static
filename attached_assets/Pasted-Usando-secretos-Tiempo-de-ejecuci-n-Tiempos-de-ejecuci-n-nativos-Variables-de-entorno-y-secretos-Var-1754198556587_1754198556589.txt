Usando secretos
Tiempo de ejecución
Tiempos de ejecución nativos
Variables de entorno y secretos
Variables de entorno predeterminadas

Almacenes de datos
Discos persistentes
Valor clave (compatible con Redis®)
Creando y conectando
Preguntas frecuentes sobre Valkey/Redis
bases de datos Postgres
Descripción general
Creando y conectando
Recuperación y copias de seguridad
Leer réplicas
Alta disponibilidad
Aplicaciones de administración
Extensiones
Agrupación de conexiones
Actualizaciones de versión
Solución de problemas de rendimiento
Planes flexibles
Tipos de instancias heredadas

Redes
Regiones
Red privada
Enlaces privados
Almacenamiento en caché perimetral
Ancho de banda de salida
IP salientes
certificados TLS
Dominios personalizados
Descripción general
Cloudflare
Namecheap
Otros proveedores de DNS

Controles operativos
El panel de renderizado
Proyectos y entornos
Acciones de servicio
Escalada
Vistas previas del servicio
Reversiones
Modo de mantenimiento
Trabajos puntuales
Infraestructura como código
Descripción general de los planos
referencia render.yaml
Entornos de vista previa
Proveedor de Terraform

Monitoreo y registros
controles de salud
Mejores prácticas de tiempo de actividad
Notificaciones
Webhooks
Correo electrónico / Slack
Métrica
Métricas en el panel
Transmisión de OpenTelemetry
Explotación florestal
Registros en el panel de control
Transmisión de syslog
SSH
Descripción general
Generar una clave
Agregar una clave
Solución de problemas de SSH

Integraciones
CLI
Servidor MCP
API REST
Descripción general
Referencia de API
Herramientas de terceros
Perro de datos
IP estática de QuotaGuard
Formspree

Gestión de usuarios
Espacios de trabajo, miembros y roles
Configuración de inicio de sesión
registros de auditoría
Organizaciones empresariales
Descripción general de la organización
Inicio de sesión único SAML

Protecciones de la plataforma
Protección contra DDoS
Mantenimiento de la plataforma
Cumplimiento
Descripción general
HIPAA (datos de salud de EE. UU.)
Mejores prácticas de HIPAA
Modelo de responsabilidad compartida
Política de pruebas de penetración

Comparar
Heroku vs Render
Vercel vs. Render
Variables de entorno predeterminadas
Render establece automáticamente los valores de ciertas variables de entorno para su servicio.

A menos que se indique lo contrario, estas variables de entorno están disponibles tanto en el momento de la compilación como en el momento de la ejecución.

Los valores de las variables de entorno siempre son cadenas.

En la lógica de su aplicación, realice las conversiones necesarias para los valores de las variables que representan otros tipos de datos, como "false"o "10000".

Por tiempo de ejecución
Todos los tiempos de ejecución
IS_PULL_REQUEST
Este valor es trueparavistas previas de solicitudes de extraccióny falsede otro modo.

Tenga en cuenta que estos son los valores de cadena"true" y "false". Conviértalos a valores booleanos según sea necesario.

RENDER
Este valor siempre es true. Tu código puede comprobarlo para detectar si se está ejecutando en Render.

RENDER_CPU_COUNT
La cantidad de CPU disponibles para este servicio, en función de sutipo de instancia.

Por ejemplo, este valor corresponde 0.5a las instancias Starter y 2Pro. Tenga en cuenta que estos son los valores de cadena"0.5" y "2". Conviértalos a números según sea necesario.

RENDER_DISCOVERY_SERVICE
El nombre DNS de Render utilizado para descubrir todas las instancias en ejecución de unservicio a escala. Tiene el formato $RENDER_SERVICE_NAME-discovery.

RENDER_EXTERNAL_HOSTNAME
Para un servicio web o un sitio estático, este es el onrender.comnombre de host del servicio (por ejemplo, myapp.onrender.com).

Para otros tipos de servicios, este valor está vacío.

RENDER_EXTERNAL_URL
Para un servicio web o un sitio estático, esta es la onrender.comURL completa del servicio (por ejemplo https://myapp.onrender.com).

Para otros tipos de servicios, este valor está vacío.

RENDER_GIT_BRANCH
La rama de Git para un servicio o implementación.

RENDER_GIT_COMMIT
El SHA de confirmación para un servicio o implementación.

RENDER_GIT_REPO_SLUG
Tiene el formato $username/$reponame.

RENDER_INSTANCE_ID
El identificador único de la instancia de servicio actual. Útil paraservicios a escalacon múltiples instancias.

RENDER_SERVICE_ID
El identificador único del servicio. Se utiliza en elAPI de renderizado.

RENDER_SERVICE_NAME
Un identificador único y legible para un servicio.

RENDER_SERVICE_TYPE
El servicio actualtipo. Uno de web, pserv, cron, worker, static.

Es posible que existan otras variables de entorno que comiencen con RENDER_en sus entornos de compilación y ejecución.

Sin embargo, las variables no enumeradas anteriormente son estrictamente para uso interno y pueden cambiar sin previo aviso.

Estibador
Render no proporciona variables de entorno adicionales además de las que se enumeran a continuación.Todos los tiempos de ejecución.

Elixir
MIX_ENV
prod

RELEASE_DISTRIBUTION
name

Ir
GO111MODULE
on

GOPATH
/opt/render/project/go

Node.js
NODE_ENV
production(solo tiempo de ejecución)

NODE_MODULES_CACHE
true

Python 3
CI
true(solo tiempo de construcción)

FORWARDED_ALLOW_IPS
*

GUNICORN_CMD_ARGS
--preload --access-logfile - --bind=0.0.0.0:10000

PIPENV_YES
true

VENV_ROOT
/opt/render/project/src/.venv

Rubí
BUNDLE_APP_CONFIG
/opt/render/project/.gems

BUNDLE_BIN
/opt/render/project/.gems/bin

BUNDLE_DEPLOYMENT
true

BUNDLE_PATH
/opt/render/project/.gems

GEM_PATH
/opt/render/project/.gems

MALLOC_ARENA_MAX
2

PASSENGER_ENGINE
builtin

PASSENGER_ENVIRONMENT
production

PASSENGER_PORT
10000

PIDFILE
/tmp/puma-server.pid

RAILS_ENV
production

RAILS_SERVE_STATIC_FILES
true

RAILS_LOG_TO_STDOUT
true

Óxido
CARGO_HOME
/opt/render/project/.cargo

ROCKET_ENV
prod

ROCKET_PORT
10000(solo tiempo de ejecución)

RUSTUP_HOME
/opt/render/project/.rustup

Variables de entorno opcionales
Puede configurar estas variables de entorno para modificar el comportamiento predeterminado de sus servicios.

Todos los tiempos de ejecución
PORT
Paraservicios web, especifique el puerto al que se vincula su servidor HTTP.

El puerto predeterminado es 10000.

Elixir
ELIXIR_VERSION
VerConfiguración de sus versiones de Elixir y Erlang.

ERLANG_VERSION
VerConfiguración de sus versiones de Elixir y Erlang.

Node.js
SKIP_INSTALL_DEPS
Configure esto para trueomitir la ejecución de yarn/ npm installdurante la compilación.

NODE_VERSION
VerConfiguración de su versión de Node.js.

BUN_VERSION
VerConfigurando tu versión de Bun.

Python 3
PYTHON_VERSION
VerConfiguración de su versión de Python.

POETRY_VERSION
VerConfigurando tu versión de poesía.

UV_VERSION
VerConfiguración de su versión uv.

Óxido
RUSTUP_TOOLCHAIN
VerEspecificación de una cadena de herramientas de Rust.