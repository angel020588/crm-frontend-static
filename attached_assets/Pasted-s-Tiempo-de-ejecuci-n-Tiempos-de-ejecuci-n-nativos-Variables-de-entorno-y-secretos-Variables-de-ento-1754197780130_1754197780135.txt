s
Tiempo de ejecución
Tiempos de ejecución nativos
Variables de entorno y secretos
Variables de entorno predeterminadas

Almacenes de datos
Discos persistentes
Valor clave (compatible con Redis®)
Creando y conectando
Preguntas frecuentes sobre Valkey/Redis
bases de datos Postgres
Descripción general
Creando y conectando
Recuperación y copias de seguridad
Leer réplicas
Alta disponibilidad
Aplicaciones de administración
Extensiones
Agrupación de conexiones
Actualizaciones de versión
Solución de problemas de rendimiento
Planes flexibles
Tipos de instancias heredadas

Redes
Regiones
Red privada
Enlaces privados
Almacenamiento en caché perimetral
Ancho de banda de salida
IP salientes
certificados TLS
Dominios personalizados
Descripción general
Cloudflare
Namecheap
Otros proveedores de DNS

Controles operativos
El panel de renderizado
Proyectos y entornos
Acciones de servicio
Escalada
Vistas previas del servicio
Reversiones
Modo de mantenimiento
Trabajos puntuales
Infraestructura como código
Descripción general de los planos
referencia render.yaml
Entornos de vista previa
Proveedor de Terraform

Monitoreo y registros
controles de salud
Mejores prácticas de tiempo de actividad
Notificaciones
Webhooks
Correo electrónico / Slack
Métrica
Métricas en el panel
Transmisión de OpenTelemetry
Explotación florestal
Registros en el panel de control
Transmisión de syslog
SSH
Descripción general
Generar una clave
Agregar una clave
Solución de problemas de SSH

Integraciones
CLI
Servidor MCP
API REST
Descripción general
Referencia de API
Herramientas de terceros
Perro de datos
IP estática de QuotaGuard
Formspree

Gestión de usuarios
Espacios de trabajo, miembros y roles
Configuración de inicio de sesión
registros de auditoría
Organizaciones empresariales
Descripción general de la organización
Inicio de sesión único SAML

Protecciones de la plataforma
Protección contra DDoS
Mantenimiento de la plataforma
Cumplimiento
Descripción general
HIPAA (datos de salud de EE. UU.)
Mejores prácticas de HIPAA
Modelo de responsabilidad compartida
Política de pruebas de penetración

Comparar
Heroku vs Render
Vercel vs. Render
Tiempos de ejecución nativos
Los servicios de renderizado proporcionan tiempos de ejecución nativos que le permiten crear e implementar su aplicación utilizando entornos de lenguaje comunes.

Los tiempos de ejecución nativos de Render incluyen:

Compilaciones e implementaciones automatizadas para idiomas compatibles en repositorios Git públicos y privados
Infraestructura como códigoapoyo conrender.yaml
Actualizaciones periódicas de los entornos de ejecución nativos para mejorar la funcionalidad, la seguridad y el rendimiento.
Todos los entornos de ejecución nativos vienen con funciones de renderizado estándar como:

Redes privadas, equilibrio de carga y descubrimiento de servicios
Almacenamiento en bloque persistente
AutomáticoBrótliygzipcompresión para respuestas más rápidas
HTTP fácilcontroles de saludyImplementaciones sin tiempo de inactividad.
Automáticovistas previas de solicitudes de extracción
Compatibilidad nativa con HTTP/2
Protección contra DDoS
Redirecciones automáticas HTTP → HTTPS
Tiempos de ejecución disponibles
Render proporciona tiempos de ejecución nativos para Node.js/Bun, Python, Ruby, Go, Rust y Elixir.

Para más detalles, véaseIdiomas compatibles.

Cambiar el tiempo de ejecución de un servicio
Si recientemente ha creado un servicio con un tiempo de ejecución incorrecto, la solución más rápida suele ser crear un nuevo servicio con el tiempo de ejecución correcto.

También puede cambiar el tiempo de ejecución de un servicio existente de cualquiera de las siguientes maneras:

Realizar una llamada HTTP a la API de RenderServicio de actualizaciónpunto final.
Especifique uno nuevo runtimea través del serviceDetailsparámetro que proporcione en su solicitud.
Si está administrando su servicio conPlanos de renderizado, actualice el campo del servicio runtimeen su render.yamlarchivo y luego sincronice su Blueprint.
Herramientas y utilidades
Las herramientas y utilidades que se enumeran a continuación están disponibles para compilaciones e implementaciones nativas.

Si su compilación requiere una herramienta que no aparece en la lista a continuación, puedeimplementar con DockerEn lugar de construir de forma nativa.

Construcciones
bollo
rizo
ffmpeg
g++
gcc
obtener texto
git
gnupg2
jq
libvips-dev
herramientas libvips
hacer
nano
nodo
npm
pandoc
cerdos
pnpm
cliente postgresql
PrinceXML
desarrollo de python3
python3-pip
herramientas de configuración de python3
sincronización r
sqlite3
trago
mecanografiado
abrir la cremallera
empuje
paquete web
wget
hilo
cremallera
Despliegues
bollo
rizo
ffmpeg
g++
gcc
obtener texto
guión fantasma
git
gnupg2
magia de imágenes
jq
libvips-dev
herramientas libvips
hacer
nano
nodo
npm
pandoc
cerdos
pnpm
cliente postgresql
cliente postgresql-12
cliente postgresql-13
cliente postgresql-14
PrinceXML
desarrollo de python3
python3-pip
herramientas de configuración de python3
sincronización r
sqlite3
trago
mecanografiado
abrir la cremallera
empuje
paquete web
wget
hilo
cremallera